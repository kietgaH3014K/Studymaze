// src/pages/Review.jsx
import React, { useState } from 'react';
import axios from 'axios';
import './Review.css';

export default function Review() {
  const [formData, setFormData] = useState({
    class_level: '',
    subject: '',
    study_time: '',
    goal: ''
  });
  const [loading, setLoading] = useState(false);
  const [msg, setMsg] = useState('');

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((s) => ({ ...s, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setMsg('');
    if (!formData.class_level || !formData.subject || !formData.study_time || !formData.goal) {
      setMsg('‚ö†Ô∏è Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.');
      return;
    }
    try {
      setLoading(true);

      // N·∫øu b·∫°n KH√îNG exempt CSRF, b·∫≠t 2 d√≤ng d∆∞·ªõi v√† th√™m CSRF v√†o headers
      // axios.defaults.withCredentials = true;
      // const csrftoken = document.cookie.split('csrftoken=')?.[1]?.split(';')?.[0];

      const res = await axios.post(
        'http://127.0.0.1:8000/api/generate-learning-path/',
        formData,
        {
          headers: {
            'Content-Type': 'application/json',
            // 'X-CSRFToken': csrftoken, // ch·ªâ c·∫ßn khi kh√¥ng @csrf_exempt
          },
        }
      );

      console.log('‚úÖ T·∫°o l·ªô tr√¨nh:', res.data);
      setMsg('‚úÖ G·ª≠i ƒë√°nh gi√° & t·∫°o l·ªô tr√¨nh th√†nh c√¥ng!');
      // Reset
      setFormData({ class_level: '', subject: '', study_time: '', goal: '' });
    } catch (error) {
      console.error('‚ùå L·ªói khi g·ª≠i:', error);
      const serverMsg =
        error?.response?.data?.error ||
        error?.response?.data?.details ||
        'G·ª≠i th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.';
      setMsg(`‚ùå ${serverMsg}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="review-container">
      <h2>ƒê√ÅNH GI√Å TR√åNH ƒê·ªò H·ªåC T·∫¨P</h2>

      <form onSubmit={handleSubmit} className="review-form">
        <label>B·∫°n ƒëang ·ªü l·ªõp m·∫•y?</label>
        <select
          name="class_level"
          value={formData.class_level}
          onChange={handleChange}
        >
          <option value="">--Ch·ªçn l·ªõp--</option>
          <option value="10">L·ªõp 10</option>
          <option value="11">L·ªõp 11</option>
          <option value="12">L·ªõp 12</option>
        </select>

        <label>B·∫°n mu·ªën c·∫£i thi·ªán m√¥n n√†o?</label>
        <input
          type="text"
          name="subject"
          placeholder="V√≠ d·ª•: Tin h·ªçc, To√°n‚Ä¶"
          value={formData.subject}
          onChange={handleChange}
        />

        <label>Th·ªùi gian h·ªçc m·ªói ng√†y</label>
        <select
          name="study_time"
          value={formData.study_time}
          onChange={handleChange}
        >
          <option value="">--Ch·ªçn th·ªùi gian--</option>
          <option value="1 gi·ªù">1 gi·ªù</option>
          <option value="2 gi·ªù">2 gi·ªù</option>
          <option value="3 gi·ªù">3 gi·ªù</option>
        </select>

        <label>M√¥ t·∫£ m·ª•c ti√™u h·ªçc t·∫≠p</label>
        <textarea
          name="goal"
          placeholder="V√≠ d·ª•: Thi ƒë·∫≠u ƒêH, n√¢ng cao k·ªπ nƒÉng‚Ä¶"
          value={formData.goal}
          onChange={handleChange}
          rows={4}
        />

        <button type="submit" disabled={loading}>
          {loading ? '‚è≥ ƒêang t·∫°o l·ªô tr√¨nh‚Ä¶' : 'üöÄ G·ª≠i ƒë√°nh gi√° & T·∫°o l·ªô tr√¨nh'}
        </button>
      </form>

      {msg && <p className="status-msg">{msg}</p>}
    </div>
  );
}
